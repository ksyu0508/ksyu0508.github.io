<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="ko"><generator uri="https://jekyllrb.com/" version="3.9.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" hreflang="ko" /><updated>2023-07-01T00:11:32+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">ksyu0508’s blog</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.</subtitle><author><name>ksyu0508</name></author><entry><title type="html">window에서 TA-lib 설치 방법</title><link href="http://localhost:4000/python/2023/06/30/TA-lib.html" rel="alternate" type="text/html" title="window에서 TA-lib 설치 방법" /><published>2023-06-30T00:00:00+09:00</published><updated>2023-06-30T00:00:00+09:00</updated><id>http://localhost:4000/python/2023/06/30/TA-lib</id><content type="html" xml:base="http://localhost:4000/python/2023/06/30/TA-lib.html">&lt;h2 id=&quot;ta-lib-개요&quot;&gt;TA-lib 개요&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TA-Lib&lt;/code&gt;은 Python을 포함한 여러 언어에서 사용할 수 있는 테크니컬 애널리시스 라이브러리이다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TA-Lib&lt;/code&gt;은 주식, 증권, 선물, 환율 등 금융 데이터를 분석하고 예측하는 데 도움이 되는 다양한 기술적 지표와 패턴을 제공한다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TA-Lib&lt;/code&gt;에서는 다양한 기술적 분석 지표를 계산하는 함수를 제공하는데, 이러한 지표에는 이동 평균선, 불린저 밴드, 상대 강도 지수(RSI), 스토캐스틱 오실레이터, MACD(Moving Average Convergence Divergence) 등이 포함되어 있다.&lt;/p&gt;

&lt;h2 id=&quot;기본-설치-방법&quot;&gt;기본 설치 방법&lt;/h2&gt;

&lt;p&gt;원래는 pip를 이용해서 간단히 사용할 수 있는 것 같다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ python -m pip install TA-Lib
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;TA-lib github 페이지를 살펴보면 기본적으로 pip, conda를 지원하고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;setup.py&lt;/code&gt;로 직접 설치하는 것도 가능하다. 다만 이러한 방법으로 설치를 진행했을 때에 윈도우 사용자에서는 필자와 같이 아래와 같은 오류를 확인할 수 있을 것이다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://onedrive.live.com/embed?resid=C5BC7ED83BDA0D3B%2110073&amp;amp;authkey=%21AKgoh2kyVQOCe14&amp;amp;width=660&amp;amp;height=999999&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;window-설치-방법&quot;&gt;window 설치 방법&lt;/h2&gt;

&lt;h3 id=&quot;32-bit-python&quot;&gt;32-bit python&lt;/h3&gt;

&lt;p&gt;공식에 나와있는 window설치 방법은 &lt;a href=&quot;http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-msvc.zip&quot;&gt;ta-lib-0.4.0-msvc.zip&lt;/a&gt;를 다운 받은 후에 직접 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;C:\ta-lib&lt;/code&gt;에 직접 압축 해제하여 사용하면 된다. 다만 32-bit python에 대해서만 공식 지원을 하고 있고 64-bit python 사용자의 경우 따로 비공식 설치를 해야하는 것으로 보인다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Windows&lt;/p&gt;

  &lt;p&gt;Download &lt;a href=&quot;http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-msvc.zip&quot;&gt;ta-lib-0.4.0-msvc.zip&lt;/a&gt;
and unzip to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;C:\ta-lib&lt;/code&gt;.&lt;/p&gt;

  &lt;blockquote&gt;
    &lt;p&gt;This is a 32-bit binary release.  If you want to use 64-bit Python, you will
need to build a 64-bit version of the library. Some unofficial (&lt;strong&gt;and
unsupported&lt;/strong&gt;) instructions for building on 64-bit Windows 10, here for
reference:&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;Download and Unzip &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ta-lib-0.4.0-msvc.zip&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;Move the Unzipped Folder &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ta-lib&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;C:\&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;Download and Install Visual Studio Community (2015 or later)
        &lt;ul&gt;
          &lt;li&gt;Remember to Select &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[Visual C++]&lt;/code&gt; Feature&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Build TA-Lib Library
        &lt;ul&gt;
          &lt;li&gt;From Windows Start Menu, Start &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[VS2015 x64 Native Tools Command
Prompt]&lt;/code&gt;&lt;/li&gt;
          &lt;li&gt;Move to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;C:\ta-lib\c\make\cdr\win32\msvc&lt;/code&gt;&lt;/li&gt;
          &lt;li&gt;Build the Library &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nmake&lt;/code&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/blockquote&gt;

  &lt;p&gt;You might also try these unofficial windows binaries for both 32-bit and
64-bit:&lt;/p&gt;

  &lt;p&gt;https://www.lfd.uci.edu/~gohlke/pythonlibs/#ta-lib&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;출처: &lt;a href=&quot;https://github.com/TA-Lib/ta-lib-python&quot;&gt;https://github.com/TA-Lib/ta-lib-python&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;64-bit-python&quot;&gt;64-bit python&lt;/h3&gt;

&lt;div class=&quot;jekyll-linkpreview-wrapper&quot;&gt;
  &lt;div class=&quot;jekyll-linkpreview-wrapper-inner&quot;&gt;
    &lt;div class=&quot;jekyll-linkpreview-content&quot;&gt;
      &lt;div class=&quot;jekyll-linkpreview-image&quot;&gt;
        &lt;a href=&quot;https://github.com/ysk24ok/jekyll-linkpreview&quot; target=&quot;_blank&quot;&gt;
          &lt;img src=&quot;https://opengraph.githubassets.com/fabeaa88e88e65cf81e448838fc6deea93411b8bf1f47fd2b562c2f734430c6f/ysk24ok/jekyll-linkpreview&quot; /&gt;
        &lt;/a&gt;
      &lt;/div&gt;

      &lt;div class=&quot;jekyll-linkpreview-body&quot;&gt;
        &lt;h2 class=&quot;jekyll-linkpreview-title&quot;&gt;
          &lt;a href=&quot;https://github.com/ysk24ok/jekyll-linkpreview&quot; target=&quot;_blank&quot;&gt;GitHub - ysk24ok/jekyll-linkpreview: Jekyll plugin to generate link preview&lt;/a&gt;
        &lt;/h2&gt;
        &lt;div class=&quot;jekyll-linkpreview-description&quot;&gt;Jekyll plugin to generate link preview. Contribute to ysk24ok/jekyll-linkpreview development by creating an account on GitHub.&lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&quot;jekyll-linkpreview-footer&quot;&gt;
      &lt;a href=&quot;//github.com&quot; target=&quot;_blank&quot;&gt;github.com&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;jekyll-linkpreview-wrapper&quot;&gt;
  &lt;div class=&quot;jekyll-linkpreview-wrapper-inner&quot;&gt;
    &lt;div class=&quot;jekyll-linkpreview-content&quot;&gt;

      &lt;div class=&quot;jekyll-linkpreview-body&quot;&gt;
        &lt;h2 class=&quot;jekyll-linkpreview-title&quot;&gt;
          &lt;a href=&quot;https://www.lfd.uci.edu/~gohlke/pythonlibs/#ta-lib&quot; target=&quot;_blank&quot;&gt;Archived: Python Extension Packages for Windows - Christoph Gohlke&lt;/a&gt;
        &lt;/h2&gt;
        &lt;div class=&quot;jekyll-linkpreview-description&quot;&gt;This page provides 32 and 64-bit Windows binaries of many scientific open-source extension packages for the official CPython distribution of the Python programming language. A few binaries are available for the PyPy distribution.&lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&quot;jekyll-linkpreview-footer&quot;&gt;
      &lt;a href=&quot;//www.lfd.uci.edu&quot; target=&quot;_blank&quot;&gt;www.lfd.uci.edu&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;에서 자신에게 맞는 whl 파일을 다운받은 후 pip를 이용하여 직접 설치 하면 된다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ python -m pip install TA_Lib-0.4.24-cp310-cp310-win_amd64.whl
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://onedrive.live.com/embed?resid=C5BC7ED83BDA0D3B%2110076&amp;amp;authkey=%21AG8WTFKVDrtYVQ0&amp;amp;width=660&amp;amp;height=999999&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;정상 작동함을 확인할 수 있다.&lt;/p&gt;</content><author><name>ksyu0508</name></author><category term="python" /><category term="debug" /><category term="TA-lib" /><summary type="html">TA-lib 개요</summary></entry><entry><title type="html">소프트웨어 엔지니어링</title><link href="http://localhost:4000/se/2023/06/12/Software-Engineering.html" rel="alternate" type="text/html" title="소프트웨어 엔지니어링" /><published>2023-06-12T00:00:00+09:00</published><updated>2023-06-12T00:00:00+09:00</updated><id>http://localhost:4000/se/2023/06/12/Software%20Engineering</id><content type="html" xml:base="http://localhost:4000/se/2023/06/12/Software-Engineering.html">&lt;h2 id=&quot;0-개요&quot;&gt;0. 개요&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Software Life Cycle&lt;/li&gt;
  &lt;li&gt;Development process&lt;/li&gt;
  &lt;li&gt;Development process Models&lt;/li&gt;
  &lt;li&gt;Modularity&lt;/li&gt;
  &lt;li&gt;Documentation&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;1-software-life-cycle&quot;&gt;1. Software Life Cycle&lt;/h2&gt;

&lt;p&gt;처음으로 소프트웨어가 개발된 후에, 한동안 소프트웨어는 사용된다. 시간이 흐르면서 소프트웨어에 여러가지 에러 및 개선사항들이 발견되기 때문에, 여러가지 변화를 소프트웨어는 반영할 수 있어야 한다. 그래서 소프트웨어가 구식이 될 때까지(obsolute) 계속해서 사용하고 수정하는 두가지 단계의 과정이 반복된다.&lt;/p&gt;

&lt;!-- 소프트웨어 라이프 사이클 자료 --&gt;

&lt;h2 id=&quot;2-development-process&quot;&gt;2. Development process&lt;/h2&gt;

&lt;p&gt;위의 소프트웨어 생명주기에서, 소프트웨어 개발 과정은 총 4가지 단계로 나누어질 수 있다&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Analysis&lt;/li&gt;
  &lt;li&gt;Design&lt;/li&gt;
  &lt;li&gt;Implementation&lt;/li&gt;
  &lt;li&gt;Testing&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;2-1-analysis&quot;&gt;2-1. Analysis&lt;/h3&gt;

&lt;p&gt;시스템 혹은 소프트웨어가 완수해야할 내용을 구체화하는 단계&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;유저 정의 (일반 or 특정 유저)&lt;/li&gt;
  &lt;li&gt;수요 정의&lt;/li&gt;
  &lt;li&gt;요구사항 정의&lt;/li&gt;
  &lt;li&gt;방법론 정의&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;2-2-design&quot;&gt;2-2. Design&lt;/h3&gt;

&lt;p&gt;분석 단계에서 정의된 요소를 어떻게 시스템이 수행할 수 있는지 정의하는 단계&lt;/p&gt;

&lt;p&gt;잘 정립된 원칙을 사용하는 design phase를 modularity로 부른다. 시스템은 작으 모듈들로 나누어질 수 있으며, 각각의 모듈들은 설계 및 테스트 후에 다른 모듈들과 연결되어 전체 프로그램을 구성할 수 있게 된다.&lt;/p&gt;

&lt;h3 id=&quot;2-3-implementation&quot;&gt;2-3. Implementation&lt;/h3&gt;

&lt;p&gt;구현(Implementation)은 직접 프로그램을 작성 및 구현하는 단계로서, 흐름도 및 의사코드등의 방법들을 활용해서 실제 코드 작성 직전에 프로그램의 논리적 흐름을 파악하는데에 사용할 수 있다. 이후에, 프로그래머는 실제 프로그래밍 언어를 이용하여 코드를 작성한다.&lt;/p&gt;

&lt;!-- 요즘에는 의사코드 및 흐름도를 잘 작성하지 않음 --&gt;

&lt;h3 id=&quot;2-4-testing&quot;&gt;2-4. Testing&lt;/h3&gt;

&lt;p&gt;말그대로 코드가 작성된 후에 테스트 하는 단계이며, 크게 두가지 방법으로 나뉘게 된다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;구분&lt;/th&gt;
      &lt;th&gt;Black Box testing&lt;/th&gt;
      &lt;th&gt;White Box testing&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;수행 인원&lt;/td&gt;
      &lt;td&gt;테스트 엔지니어 or 유저&lt;/td&gt;
      &lt;td&gt;프로그래머&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;프로그램에 대한 지식&lt;/td&gt;
      &lt;td&gt;내부 구조 및 작동방식을 모름&lt;/td&gt;
      &lt;td&gt;프로그램에 대한 모든 정보를 이해하고 있음&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;특징&lt;/td&gt;
      &lt;td&gt;요구사항을 집중적으로 테스트함&lt;/td&gt;
      &lt;td&gt;모든 지침을 준수하고, 가능한 모든 경우를 테스트함&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;3-development-process-models&quot;&gt;3. Development process Models&lt;/h2&gt;

&lt;p&gt;앞서 말한 개발 과정을 수행하기 위해서 다양한 방법론들이 존재한다. 전통적인 소프트웨어 개발 모델 중에서 폭포수 모델(waterfall model)과 점진적 모델(incremental model)이 존재함&lt;/p&gt;

&lt;!-- 그 외에 요즘 유명한 agile 개발론도 있음 --&gt;

&lt;h3 id=&quot;3-1-waterfall-model&quot;&gt;3-1. Waterfall Model&lt;/h3&gt;

&lt;p&gt;대표적인 단방향 개발 흐름을 가지고 있으며, 이전 단계의 작업이 수행되지 않으면 다음 단계의 작업을 수행할 수 없다. 사용자의 요구사항 변경을 반영하기가 어려운 구조이기 때문에, 요구사항이 잘 정립되어 있을 떄에만 사용하기 적합한 개발 모델이다&lt;/p&gt;

&lt;!-- 폭포수 모델 그림 --&gt;

&lt;h3 id=&quot;3-2-incremetal-model&quot;&gt;3-2. Incremetal Model&lt;/h3&gt;

&lt;p&gt;단어 그대로 점진적으로 소프트웨어가 구성이 된다. 사용자의 요구사항이 우선순위가 있으면, 우선순위가 높은 요구사항을 수행할 수 있는 모듈부터 개발을 시작하는 방법이다. 테스팅 단계에서도 중요한 시스템 혹은 모듈을 중심으로 테스트를 진행한다. 모듈 각각의 개발 과정은 앞서 말한 4가지의 개발 과정을 포함한다. 프로젝트의 실패 리스크를 낮출 수 있다는 장점이 있으며, 폭포수 모델에 비해서 사용자의 요구사항 변경에 더 잘 대처할 수 있다.&lt;/p&gt;

&lt;!-- 점진적 모델 그림 --&gt;

&lt;h2 id=&quot;4-modularity&quot;&gt;4. Modularity&lt;/h2&gt;

&lt;p&gt;모듈화는 프로그램을 개발할 때에 이해하고 다루기 쉬운 형태로 작은 단계로 쪼깨는 것을 말한다. 따라서 큰 프로그램을 서로 상호작용할 수 있는 작은 프로그램으로 나누는 것이다.&lt;/p&gt;

&lt;p&gt;다음의 두 가지 방법은 모듈성을 나타내는데에 사용될 수 있다&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Structure Chart: 절차지향 프로그래밍에서 함수들 간의 관계를 표현&lt;/li&gt;
  &lt;li&gt;Class Diagram: 객체지향 프로그래밍에서 클래스 간의 관계를 표현&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- 각각의 그림? --&gt;

&lt;h3 id=&quot;4-1-coupling&quot;&gt;4-1. Coupling&lt;/h3&gt;

&lt;p&gt;결합도는 서로 다른 두개의 모듈이 얼마나 인접한지를 의미. 결합도가 높다는 것은 모듈끼리 서로 의존성 높다는 것을 의미한다. 실제로는 모듈끼리 완벽히 독립적인 것은 불가능하기 때문에, 최대한 결합도를 낮추고자 하는 것을 목표로 한다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Data Coupling: 두 모듈의 하나의 데이터를 공유하고 있을 때에&lt;/li&gt;
  &lt;li&gt;Control Coupling: 한 모듈이 다른 모듈에 대한 제어권을 가지고 있을 때&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- 응집도의 모든 종류 소개 및 강한 정도--&gt;

&lt;h3 id=&quot;4-2-cohesion&quot;&gt;4-2. Cohesion&lt;/h3&gt;

&lt;p&gt;응집도는 모듈 내부에서의 요소가 얼마나 인접한지를 의미한다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;logical Cohesion: 유사한 구조를 가지고 있는 기능들을 단순히 모아놓은 형태의 모듈; 약한 형태의 응집&lt;/li&gt;
  &lt;li&gt;functional Cohesion: 모듈의 모든 기능이 단 하나의 행동을 수행하기 위하여 구성됨; 강한 형태의 응집&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;5-documentation&quot;&gt;5. Documentation&lt;/h2&gt;

&lt;p&gt;Documetation은 크게 두가지 목적을 위해서 작성되며, 소프트웨어와 함께 계속해서 수정되어야 한다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;User Documentaion: 소프트웨어의 기능과 어떻게 사용할 수 있을 지에 대해서 기술&lt;/li&gt;
  &lt;li&gt;System Documentaion: 소프트웨어의 내부 구성에 대해서 설명, 소프트웨어 생명 주기에서 시스템이 어떻게 유지 보수되어야 할지에 대해서 기술&lt;/li&gt;
&lt;/ol&gt;</content><author><name>ksyu0508</name></author><category term="SE" /><category term="Development" /><category term="컴퓨터 과학" /><summary type="html">0. 개요</summary></entry><entry><title type="html">프로그래머스 SQL 문제 풀이 (3)</title><link href="http://localhost:4000/sql/2023/06/08/SQL-%EB%AC%B8%EC%A0%9C%ED%92%80%EC%9D%B4.html" rel="alternate" type="text/html" title="프로그래머스 SQL 문제 풀이 (3)" /><published>2023-06-08T00:00:00+09:00</published><updated>2023-06-08T00:00:00+09:00</updated><id>http://localhost:4000/sql/2023/06/08/SQL%20%EB%AC%B8%EC%A0%9C%ED%92%80%EC%9D%B4</id><content type="html" xml:base="http://localhost:4000/sql/2023/06/08/SQL-%EB%AC%B8%EC%A0%9C%ED%92%80%EC%9D%B4.html">&lt;h2 id=&quot;문제&quot;&gt;문제&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CAR_RENTAL_COMPANY_CAR&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Column name&lt;/th&gt;
      &lt;th&gt;Type&lt;/th&gt;
      &lt;th&gt;Nullable&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;CAR_ID&lt;/td&gt;
      &lt;td&gt;INTEGER&lt;/td&gt;
      &lt;td&gt;FALSE&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;CAR_TYPE&lt;/td&gt;
      &lt;td&gt;VARCHAR(255)&lt;/td&gt;
      &lt;td&gt;FALSE&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;DAILY_FEE&lt;/td&gt;
      &lt;td&gt;INTEGER&lt;/td&gt;
      &lt;td&gt;FALSE&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;OPTIONS&lt;/td&gt;
      &lt;td&gt;VARCHAR(255)&lt;/td&gt;
      &lt;td&gt;FALSE&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CAR_RENTAL_COMPANY_RENTAL_HISTORY&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Column name&lt;/th&gt;
      &lt;th&gt;Type&lt;/th&gt;
      &lt;th&gt;Nullable&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;HISTORY_ID&lt;/td&gt;
      &lt;td&gt;INTEGER&lt;/td&gt;
      &lt;td&gt;FALSE&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;CAR_ID&lt;/td&gt;
      &lt;td&gt;INTEGER&lt;/td&gt;
      &lt;td&gt;FALSE&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;START_DATE&lt;/td&gt;
      &lt;td&gt;DATE&lt;/td&gt;
      &lt;td&gt;FALSE&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;END_DATE&lt;/td&gt;
      &lt;td&gt;DATE&lt;/td&gt;
      &lt;td&gt;FALSE&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CAR_RENTAL_COMPANY_CAR&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Column name&lt;/th&gt;
      &lt;th&gt;Type&lt;/th&gt;
      &lt;th&gt;Nullable&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;PLAN_ID&lt;/td&gt;
      &lt;td&gt;INTEGER&lt;/td&gt;
      &lt;td&gt;FALSE&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;CAR_TYPE&lt;/td&gt;
      &lt;td&gt;VARCHAR(255)&lt;/td&gt;
      &lt;td&gt;FALSE&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;DURATION_TYPE&lt;/td&gt;
      &lt;td&gt;VARCHAR(255)&lt;/td&gt;
      &lt;td&gt;FALSE&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;DISCOUNT_RATE&lt;/td&gt;
      &lt;td&gt;INTEGER&lt;/td&gt;
      &lt;td&gt;FALSE&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;1-평균-일일-대여-요금-구하기&quot;&gt;1. 평균 일일 대여 요금 구하기&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CAR_RENTAL_COMPANY_CAR&lt;/code&gt; 테이블에서 자동차 종류가 ‘SUV’인 자동차들의 평균 일일 대여 요금을 출력하는 SQL문을 작성해주세요. 이때 평균 일일 대여 요금은 소수 첫 번째 자리에서 반올림하고, 컬럼명은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AVERAGE_FEE&lt;/code&gt; 로 지정해주세요.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-oracle&quot; data-lang=&quot;oracle&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;SELECT ROUND(AVG(DAILY_FEE), 0) AS AVERAGE_FEE
FROM CAR_RENTAL_COMPANY_CAR
WHERE CAR_TYPE = &apos;SUV&apos;;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;2-자동차-종류-별-특정-옵션이-포함된-자동차-수-구하기&quot;&gt;2. 자동차 종류 별 특정 옵션이 포함된 자동차 수 구하기&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CAR_RENTAL_COMPANY_CAR&lt;/code&gt; 테이블에서 ‘통풍시트’, ‘열선시트’, ‘가죽시트’ 중 하나 이상의 옵션이 포함된 자동차가 자동차 종류 별로 몇 대인지 출력하는 SQL문을 작성해주세요. 이때 자동차 수에 대한 컬럼명은 CARS로 지정하고, 결과는 자동차 종류를 기준으로 오름차순 정렬해주세요.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-oracle&quot; data-lang=&quot;oracle&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;SELECT CAR_TYPE, COUNT(CAR_TYPE) AS CARS
FROM CAR_RENTAL_COMPANY_CAR
WHERE REGEXP\_LIKE\(OPTIONS, &apos;열선시트|가죽시트|통풍시트&apos;)
GROUP BY CAR_TYPE
ORDER BY CAR_TYPE;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;3-자동차-대여-기록에서-장기단기-대여-구분하기&quot;&gt;3. 자동차 대여 기록에서 장기/단기 대여 구분하기&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CAR_RENTAL_COMPANY_RENTAL_HISTORY&lt;/code&gt; 테이블에서 대여 시작일이 2022년 9월에 속하는 대여 기록에 대해서 대여 기간이 30일 이상이면 ‘장기 대여’ 그렇지 않으면 ‘단기 대여’ 로 표시하는 컬럼(컬럼명: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RENT_TYPE&lt;/code&gt;)을 추가하여 대여기록을 출력하는 SQL문을 작성해주세요. 결과는 대여 기록 ID를 기준으로 내림차순 정렬해주세요.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-oracle&quot; data-lang=&quot;oracle&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;SELECT HISTORY_ID, CAR_ID,
    TO_CHAR(START_DATE, &apos;YYYY-MM-DD&apos;) AS START_DATE,
    TO_CHAR(END_DATE, &apos;YYYY-MM-DD&apos;) AS END_DATE,
    CASE
    WHEN END_DATE - START_DATE + 1 &amp;gt;= 30
        THEN &apos;장기 대여&apos;
    ELSE &apos;단기 대여&apos;
    END AS RENT_TYPE
FROM CAR_RENTAL_COMPANY_RENTAL_HISTORY
WHERE EXTRACT(MONTH FROM START_DATE) = 9
ORDER BY HISTORY_ID DESC;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;4-대여-횟수가-많은-자동차들의-월별-대여-횟수-구하기&quot;&gt;4. 대여 횟수가 많은 자동차들의 월별 대여 횟수 구하기&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CAR_RENTAL_COMPANY_RENTAL_HISTORY&lt;/code&gt; 테이블에서 대여 시작일을 기준으로 2022년 8월부터 2022년 10월까지 총 대여 횟수가 5회 이상인 자동차들에 대해서 해당 기간 동안의 월별 자동차 ID 별 총 대여 횟수(컬럼명: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RECORDS&lt;/code&gt;) 리스트를 출력하는 SQL문을 작성해주세요. 결과는 월을 기준으로 오름차순 정렬하고, 월이 같다면 자동차 ID를 기준으로 내림차순 정렬해주세요. 특정 월의 총 대여 횟수가 0인 경우에는 결과에서 제외해주세요.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-oracle&quot; data-lang=&quot;oracle&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;WITH MONTH_HISTORY AS (
    SELECT HISTORY_ID, CAR_ID, EXTRACT(MONTH FROM START_DATE) AS MONTH
    FROM CAR_RENTAL_COMPANY_RENTAL_HISTORY
    WHERE EXTRACT(MONTH FROM START_DATE) BETWEEN 8 AND 10)

SELECT MONTH, CAR_ID, COUNT(*) as RECORDS
FROM MONTH_HISTORY
WHERE CAR_ID IN (   
    SELECT CAR_ID
    FROM MONTH_HISTORY
    GROUP BY CAR_ID
    HAVING COUNT(*) &amp;gt;= 5)
GROUP BY MONTH, CAR_ID
ORDER BY MONTH, CAR_ID DESC;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;5-자동차-대여-기록-별-대여-금액-구하기&quot;&gt;5. 자동차 대여 기록 별 대여 금액 구하기&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CAR_RENTAL_COMPANY_CAR&lt;/code&gt; 테이블과 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CAR_RENTAL_COMPANY_RENTAL_HISTORY&lt;/code&gt; 테이블과 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CAR_RENTAL_COMPANY_DISCOUNT_PLAN&lt;/code&gt; 테이블에서 자동차 종류가 ‘트럭’인 자동차의 대여 기록에 대해서 대여 기록 별로 대여 금액(컬럼명: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FEE&lt;/code&gt;)을 구하여 대여 기록 ID와 대여 금액 리스트를 출력하는 SQL문을 작성해주세요. 결과는 대여 금액을 기준으로 내림차순 정렬하고, 대여 금액이 같은 경우 대여 기록 ID를 기준으로 내림차순 정렬해주세요.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-oracle&quot; data-lang=&quot;oracle&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;SELECT *
FROM(
    SELECT CH.HISTORY_ID, AVG(CH.DAILY_FEE) * ROUND(MAX(CH.END_DATE - CH.START_DATE + 1), 0) * (100 - NVL(TO_NUMBER(MAX(DISCOUNT_RATE)), 0)) / 100 AS FEE
    FROM (
        SELECT C.CAR_ID, START_DATE, END_DATE, CAR_TYPE, HISTORY_ID, DAILY_FEE
        FROM CAR_RENTAL_COMPANY_CAR C,
             CAR_RENTAL_COMPANY_RENTAL_HISTORY H
        WHERE C.CAR_ID = H.CAR_ID AND C.CAR_TYPE = &apos;트럭&apos;) CH
    LEFT JOIN CAR_RENTAL_COMPANY_DISCOUNT_PLAN P
        ON CH.END_DATE - CH.START_DATE + 1 &amp;gt;= TO_NUMBER(REGEXP_REPLACE(P.DURATION_TYPE, &apos;[^0-9]&apos;))
        AND CH.CAR_TYPE = P.CAR_TYPE
    GROUP BY CH.HISTORY_ID)
ORDER BY FEE DESC, HISTORY_ID DESC;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name>ksyu0508</name></author><category term="SQL" /><category term="Oracle" /><category term="SQL" /><category term="프로그래머스" /><category term="코딩테스트" /><summary type="html">문제</summary></entry><entry><title type="html">프로그래머스 SQL 문제 풀이 (2)</title><link href="http://localhost:4000/sql/2023/06/06/SQL-%EB%AC%B8%EC%A0%9C%ED%92%80%EC%9D%B4.html" rel="alternate" type="text/html" title="프로그래머스 SQL 문제 풀이 (2)" /><published>2023-06-06T00:00:00+09:00</published><updated>2023-06-06T00:00:00+09:00</updated><id>http://localhost:4000/sql/2023/06/06/SQL%20%EB%AC%B8%EC%A0%9C%ED%92%80%EC%9D%B4</id><content type="html" xml:base="http://localhost:4000/sql/2023/06/06/SQL-%EB%AC%B8%EC%A0%9C%ED%92%80%EC%9D%B4.html">&lt;h2 id=&quot;문제&quot;&gt;문제&lt;/h2&gt;

&lt;h3 id=&quot;1-특정-옵션이-포함된-자동차-리스트-구하기&quot;&gt;1. 특정 옵션이 포함된 자동차 리스트 구하기&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CAR_RENTAL_COMPANY_CAR&lt;/code&gt; 테이블에서 ‘네비게이션’ 옵션이 포함된 자동차 리스트를 출력하는 SQL문을 작성해주세요. 결과는 자동차 ID를 기준으로 내림차순 정렬해주세요.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-oracle&quot; data-lang=&quot;oracle&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;SELECT *
FROM CAR_RENTAL_COMPANY_CAR
WHERE OPTIONS LIKE &apos;%네비게이션%&apos;
ORDER BY CAR_ID DESC;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;2-자동차-평균-대여-기간-구하기&quot;&gt;2. 자동차 평균 대여 기간 구하기&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CAR_RENTAL_COMPANY_RENTAL_HISTORY&lt;/code&gt; 테이블에서 평균 대여 기간이 7일 이상인 자동차들의 자동차 ID와 평균 대여 기간(컬럼명: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AVERAGE_DURATION&lt;/code&gt;) 리스트를 출력하는 SQL문을 작성해주세요. 평균 대여 기간은 소수점 두번째 자리에서 반올림하고, 결과는 평균 대여 기간을 기준으로 내림차순 정렬해주시고, 평균 대여 기간이 같으면 자동차 ID를 기준으로 내림차순 정렬해주세요.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-oracle&quot; data-lang=&quot;oracle&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;SELECT CAR_ID, ROUND(AVG(END_DATE - START_DATE + 1), 1) AS AVERAGE_DURATION
FROM CAR_RENTAL_COMPANY_RENTAL_HISTORY
GROUP BY CAR_ID
HAVING ROUND(AVG(END_DATE - START_DATE + 1), 1) &amp;gt;= 7
ORDER BY AVERAGE_DURATION DESC, CAR_ID DESC;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;3-대여-기록이-존재하는-자동차-리스트-구하기&quot;&gt;3. 대여 기록이 존재하는 자동차 리스트 구하기&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CAR_RENTAL_COMPANY_CAR&lt;/code&gt; 테이블과 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CAR_RENTAL_COMPANY_RENTAL_HISTORY&lt;/code&gt; 테이블에서 자동차 종류가 ‘세단’인 자동차들 중 10월에 대여를 시작한 기록이 있는 자동차 ID 리스트를 출력하는 SQL문을 작성해주세요. 자동차 ID 리스트는 중복이 없어야 하며, 자동차 ID를 기준으로 내림차순 정렬해주세요.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-oracle&quot; data-lang=&quot;oracle&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;SELECT CAR_ID
FROM CAR_RENTAL_COMPANY_CAR
WHERE CAR_ID IN (
    SELECT CAR_ID
    FROM CAR_RENTAL_COMPANY_RENTAL_HISTORY
    WHERE EXTRACT(MONTH FROM START_DATE) = 10)
    AND CAR_TYPE = &apos;세단&apos;
ORDER BY CAR_ID DESC;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;4-자동차-대여-기록에서-대여중--대여-가능-여부-구분하기&quot;&gt;4. 자동차 대여 기록에서 대여중 / 대여 가능 여부 구분하기&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CAR_RENTAL_COMPANY_RENTAL_HISTORY&lt;/code&gt; 테이블에서 2022년 10월 16일에 대여 중인 자동차인 경우 ‘대여중’ 이라고 표시하고, 대여 중이지 않은 자동차인 경우 ‘대여 가능’을 표시하는 컬럼(컬럼명: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AVAILABILITY&lt;/code&gt;)을 추가하여 자동차 ID와 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AVAILABILITY&lt;/code&gt; 리스트를 출력하는 SQL문을 작성해주세요. 이때 반납 날짜가 2022년 10월 16일인 경우에도 ‘대여중’으로 표시해주시고 결과는 자동차 ID를 기준으로 내림차순 정렬해주세요.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-oracle&quot; data-lang=&quot;oracle&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;SELECT CAR_ID,
    CASE
    WHEN AVG(AVAILABILITY) &amp;gt; 0
        THEN &apos;대여중&apos;
    ELSE &apos;대여 가능&apos;
    END AS AVAILABILITY
FROM (
    SELECT CAR_ID,
        CASE
        WHEN END_DATE &amp;gt;= TO_DATE(&apos;20221016&apos;, &apos;YYYYMMDD&apos;)
        AND START_DATE &amp;lt;= TO_DATE(&apos;20221016&apos;, &apos;YYYYMMDD&apos;)
            THEN 1
        ELSE 0
        END AS AVAILABILITY
    FROM CAR_RENTAL_COMPANY_RENTAL_HISTORY)
GROUP BY CAR_ID
ORDER BY CAR_ID DESC;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;5-조건에-맞는-사용자와-총-거래금액-조회하기&quot;&gt;5. 조건에 맞는 사용자와 총 거래금액 조회하기&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CAR_RENTAL_COMPANY_CAR&lt;/code&gt; 테이블과 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CAR_RENTAL_COMPANY_RENTAL_HISTORY&lt;/code&gt; 테이블과 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CAR_RENTAL_COMPANY_DISCOUNT_PLAN&lt;/code&gt; 테이블에서 자동차 종류가 ‘세단’ 또는 ‘SUV’ 인 자동차 중 2022년 11월 1일부터 2022년 11월 30일까지 대여 가능하고 30일간의 대여 금액이 50만원 이상 200만원 미만인 자동차에 대해서 자동차 ID, 자동차 종류, 대여 금액(컬럼명: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FEE&lt;/code&gt;) 리스트를 출력하는 SQL문을 작성해주세요. 결과는 대여 금액을 기준으로 내림차순 정렬하고, 대여 금액이 같은 경우 자동차 종류를 기준으로 오름차순 정렬, 자동차 종류까지 같은 경우 자동차 ID를 기준으로 내림차순 정렬해주세요.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-oracle&quot; data-lang=&quot;oracle&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;SELECT *
FROM (
    SELECT CAR_ID, C.CAR_TYPE, DAILY_FEE * 30 * (100 - TO_NUMBER(DISCOUNT_RATE)) / 100 AS FEE
    FROM CAR_RENTAL_COMPANY_CAR C
    JOIN (
        SELECT CAR_TYPE, DISCOUNT_RATE
        FROM CAR_RENTAL_COMPANY_DISCOUNT_PLAN
        WHERE DURATION_TYPE = &apos;30일 이상&apos;)
        P ON C.CAR_TYPE = P.CAR_TYPE
    WHERE CAR_ID NOT IN (
        SELECT CAR_ID
        FROM CAR_RENTAL_COMPANY_RENTAL_HISTORY
        WHERE START_DATE &amp;lt;= TO_DATE(&apos;202211&apos;, &apos;YYYYMM&apos;)
            AND END_DATE &amp;gt;= TO_DATE(&apos;202211&apos;, &apos;YYYYMM&apos;)))
WHERE FEE BETWEEN 500000 AND 2000000
ORDER BY FEE DESC, CAR_TYPE, CAR_ID DESC;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name>ksyu0508</name></author><category term="SQL" /><category term="Oracle" /><category term="SQL" /><category term="프로그래머스" /><category term="코딩테스트" /><summary type="html">문제</summary></entry><entry><title type="html">프로그래머스 SQL 문제 풀이 (1)</title><link href="http://localhost:4000/sql/2023/06/05/SQL-%EB%AC%B8%EC%A0%9C%ED%92%80%EC%9D%B4.html" rel="alternate" type="text/html" title="프로그래머스 SQL 문제 풀이 (1)" /><published>2023-06-05T00:00:00+09:00</published><updated>2023-06-05T00:00:00+09:00</updated><id>http://localhost:4000/sql/2023/06/05/SQL%20%EB%AC%B8%EC%A0%9C%ED%92%80%EC%9D%B4</id><content type="html" xml:base="http://localhost:4000/sql/2023/06/05/SQL-%EB%AC%B8%EC%A0%9C%ED%92%80%EC%9D%B4.html">&lt;h2 id=&quot;문제&quot;&gt;문제&lt;/h2&gt;

&lt;h3 id=&quot;1-조건에-부합하는-중고거래-댓글-조회하기&quot;&gt;1. 조건에 부합하는 중고거래 댓글 조회하기&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;‘USED_GOODS_BOARD’와 ‘USED_GOODS_REPLY’ 테이블에서 2022년 10월에 작성된 게시글 제목, 게시글 ID, 댓글 ID, 댓글 작성자 ID, 댓글 내용, 댓글 작성일을 조회하는 SQL문을 작성해주세요. 결과는 댓글 작성일을 기준으로 오름차순 정렬해주시고, 댓글 작성일이 같다면 게시글 제목을 기준으로 오름차순 정렬해주세요.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-oracle&quot; data-lang=&quot;oracle&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;SELECT TITLE, A.BOARD_ID, REPLY_ID, B.WRITER_ID, B.CONTENTS, TO_CHAR(B.CREATED_DATE, &apos;yyyy-mm-dd&apos;) AS CREATED_DATE
FROM USED_GOODS_BOARD A, USED_GOODS_REPLY B
WHERE A.BOARD_ID = B.BOARD_ID AND EXTRACT(MONTH FROM A.CREATED_DATE) = 10
ORDER BY B.CREATED_DATE, TITLE
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;2-조건에-부합하는-중고거래-상태-조회하기&quot;&gt;2. 조건에 부합하는 중고거래 상태 조회하기&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;USED_GOODS_BOARD&lt;/code&gt; 테이블에서 2022년 10월 5일에 등록된 중고거래 게시물의 게시글 ID, 작성자 ID, 게시글 제목, 가격, 거래상태를 조회하는 SQL문을 작성해주세요. 거래상태가 SALE 이면 판매중, RESERVED이면 예약중, DONE이면 거래완료 분류하여 출력해주시고, 결과는 게시글 ID를 기준으로 내림차순 정렬해주세요.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-oracle&quot; data-lang=&quot;oracle&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;SELECT BOARD_ID, WRITER_ID, TITLE, PRICE,
    CASE STATUS
        WHEN &apos;SALE&apos;
            THEN &apos;판매중&apos;
        WHEN &apos;RESERVED&apos;
            THEN &apos;예약중&apos;
        ELSE &apos;거래완료&apos;
        END
    AS STATUS
FROM USED_GOODS_BOARD
WHERE TO_CHAR(CREATED_DATE, &apos;yyyy-mm-dd&apos;) = &apos;2022-10-05&apos;
ORDER BY BOARD_ID DESC
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;3-조회수가-가장-많은-중고거래-게시판의-첨부파일-조회하기&quot;&gt;3. 조회수가 가장 많은 중고거래 게시판의 첨부파일 조회하기&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;USED_GOODS_BOARD&lt;/code&gt;와 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;USED_GOODS_FILE&lt;/code&gt; 테이블에서 조회수가 가장 높은 중고거래 게시물에 대한 첨부파일 경로를 조회하는 SQL문을 작성해주세요. 첨부파일 경로는 FILE ID를 기준으로 내림차순 정렬해주세요. 기본적인 파일경로는 /home/grep/src/ 이며, 게시글 ID를 기준으로 디렉토리가 구분되고, 파일이름은 파일 ID, 파일 이름, 파일 확장자로 구성되도록 출력해주세요. 조회수가 가장 높은 게시물은 하나만 존재합니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-oracle&quot; data-lang=&quot;oracle&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;SELECT &apos;/home/grep/src/&apos;\||F.BOARD\_ID\||&apos;/&apos;\||FILE\_ID\||FILE\_NAME\||FILE\_EXT AS FILE\_PATH
FROM USED_GOODS_FILE F
JOIN (
    SELECT BOARD_ID
    FROM (
        SELECT BOARD_ID
        FROM USED_GOODS_BOARD
        ORDER BY VIEWS DESC
    )
    WHERE ROWNUM &amp;lt;= 1
) B ON F.BOARD_ID = B.BOARD_ID
ORDER BY FILE_ID DESC;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;4-조건에-맞는-사용자-정보-조회하기&quot;&gt;4. 조건에 맞는 사용자 정보 조회하기&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;USED_GOODS_BOARD&lt;/code&gt;와 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;USED_GOODS_USER&lt;/code&gt; 테이블에서 중고 거래 게시물을 3건 이상 등록한 사용자의 사용자 ID, 닉네임, 전체주소, 전화번호를 조회하는 SQL문을 작성해주세요. 이때, 전체 주소는 시, 도로명 주소, 상세 주소가 함께 출력되도록 해주시고, 전화번호의 경우 xxx-xxxx-xxxx 같은 형태로 하이픈 문자열(-)을 삽입하여 출력해주세요. 결과는 회원 ID를 기준으로 내림차순 정렬해주세요.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-oracle&quot; data-lang=&quot;oracle&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;SELECT USER_ID, NICKNAME,
    CITY\||&apos; &apos;\||STREET\_ADDRESS1\||&apos; &apos;\||STREET\_ADDRESS2 AS 전체주소,
    REGEXP_REPLACE(TLNO, &apos;(.{3})(.{4})(.{3})&apos;, &apos;\1-\2-\3&apos;) AS 전화번호
FROM USED_GOODS_USER
WHERE USER_ID IN (
    SELECT WRITER_ID
    FROM USED_GOODS_BOARD
    GROUP BY(WRITER_ID)
    HAVING COUNT(WRITER_ID) &amp;gt;= 3)
ORDER BY USER_ID DESC;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;5-조건에-맞는-사용자와-총-거래금액-조회하기&quot;&gt;5. 조건에 맞는 사용자와 총 거래금액 조회하기&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;USED_GOODS_BOARD&lt;/code&gt;와 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;USED_GOODS_USER&lt;/code&gt; 테이블에서 완료된 중고 거래의 총금액이 70만 원 이상인 사람의 회원 ID, 닉네임, 총거래금액을 조회하는 SQL문을 작성해주세요. 결과는 총거래금액을 기준으로 오름차순 정렬해주세요.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-oracle&quot; data-lang=&quot;oracle&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;SELECT USER_ID, NICKNAME, TOTAL_SALES
FROM USED_GOODS_USER
INNER JOIN (
    SELECT WRITER_ID, SUM(PRICE) AS TOTAL_SALES
    FROM USED_GOODS_BOARD
    WHERE STATUS = &apos;DONE&apos;
    GROUP BY WRITER_ID
    HAVING SUM(PRICE) &amp;gt;= 700000)
    ON WRITER_ID = USER_ID
ORDER BY TOTAL_SALES;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name>ksyu0508</name></author><category term="SQL" /><category term="Oracle" /><category term="SQL" /><category term="프로그래머스" /><category term="코딩테스트" /><summary type="html">문제</summary></entry><entry><title type="html">XPS 13 9370 방열작업</title><link href="http://localhost:4000/etc/2023/06/03/XPS-9370-%EB%B0%A9%EC%97%B4-%EC%9E%91%EC%97%85.html" rel="alternate" type="text/html" title="XPS 13 9370 방열작업" /><published>2023-06-03T00:00:00+09:00</published><updated>2023-06-03T00:00:00+09:00</updated><id>http://localhost:4000/etc/2023/06/03/XPS%209370%20%EB%B0%A9%EC%97%B4%20%EC%9E%91%EC%97%85</id><content type="html" xml:base="http://localhost:4000/etc/2023/06/03/XPS-9370-%EB%B0%A9%EC%97%B4-%EC%9E%91%EC%97%85.html">&lt;h2 id=&quot;서론&quot;&gt;서론&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://dsm01pap005files.storage.live.com/y4mjhJGUX3iZAnwxSyu-wWtDaiw9NaGbVmgbB9SfGCFSdWhBePS13tYaD8zHl2Ep28S4nPk8GXfjgWtIIBpLAR2WUVCGz_xXeyTWu7ErfbVCsw1wS6TwTo0IlOIIHnNATC9Toin0rxKYCKMcvmcW4z2t9TuniM9ganpIrLsWN98eVeqY3gcNAarIfUwSBMOqC5Z?width=4032&amp;amp;height=3024&amp;amp;cropmode=none&quot; alt=&quot;XPS 13 9370&quot; /&gt;&lt;/p&gt;

&lt;p&gt;현재 쓰고 있는 노트북의 무게가 2kg가 넘기 때문에 가볍게 문서 작업용으로만 사용할 노트북을 살까 고민하던 찰나에 중고나라에서 xps 13이 30만원 중반대로 올라온 것을 보고 바로 사버렸다. 원래 주인분이 회사에서 출장용으로만 사용하셔서 그런지 5년이 된 노트북 치고 상태가 매우 좋았다.  현재 노트북은 DELL의 inspiron 7620 모델을 사용하고 있는데 사실 출고가 기준으로는 두 노트북은 크게 차이가 나지 않고 7620도 준수한 외관을 보여주지만 5년 지난 XPS의 외관이 쉽게 이길정도로 실물이 예뻤다.&lt;/p&gt;

&lt;h2 id=&quot;써멀-구리스-재도포-및-써멀패드-부착-작업&quot;&gt;써멀 구리스 재도포 및 써멀패드 부착 작업&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://dsm01pap005files.storage.live.com/y4mbGTBaOIKepZ2QQrKulkuTLsFuGAOrxXrJFEsw_EiTSlltmVKBncT-MFOHTnYN2koOvsxjNOak91_bhmTonqGYf-t8VKYGmt6GZaRpLvt9eem57jS215plx2sH7EjEqYVsE_3d68c0My8yqKQqFZO1q7qbtQqQ0oICabNffzxNjLgB16NKdZEcMCV5fyMITto?width=4032&amp;amp;height=3024&amp;amp;cropmode=none&quot; alt=&quot;노트북 하판 모습&quot; /&gt;&lt;/p&gt;

&lt;p&gt;별모양 드라이버로 8군데 나사를 풀어주면 된다. 그 이후 헤라를 이용해서 쉽게 하판을 분리할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://dsm01pap005files.storage.live.com/y4mSx_aiTyPxACbYNjRonyWbjKmG6Lg8KtckmLc3OVVS0c8bzRt9lBvMirvIFZQgV8kPnLMT2Bz3bffKc0DBUNaPY-iOjj-lkhWo2aoQG8rd4qwdQckD-oKzRoeoCSxmCoHzXssSx2Ns_NjWZMKbjv02NNpRIuNnUcZRXteUd0mfrrmnSa4XFDFsqivPy7wF9uf?width=4032&amp;amp;height=3024&amp;amp;cropmode=none&quot; alt=&quot;노트북 하판 분해 후 모습&quot; /&gt;&lt;/p&gt;

&lt;p&gt;XPS 내부의 모습으로 중고제품이지만 먼지도 없고 상당히 깨끗한 모습. 배터리도 오래되었지만 성능도 멀쩡하고 스웰링 현상도 보이지 않기에 급하게 배터리까지 교체해줄 필요는 없을 듯 하다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://dsm01pap005files.storage.live.com/y4mFWJIEMiZDt6jGBgm1a53t9plzLa3hb-4Ho5pwPcKIGTtQtgVsYsreERNCsXChPBexOFsThgLEkR-fTEsovQAP3eNQdWg8FqyEObTiRbw21VFF9yb7iwi545B4rxvUPeBw8IrzUly31GNeG67LJEei_vhoCVfQbYgaYpUSHR1ln6gmSZSVszQLFeFOa665W6V?width=3024&amp;amp;height=4032&amp;amp;cropmode=none&quot; alt=&quot;기존 써멀 구리스 상태&quot; /&gt;&lt;/p&gt;

&lt;p&gt;DELL의 xps라는 이름에 맞지 않는 놀라운 써멀 도포 상태…&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://dsm01pap005files.storage.live.com/y4mpk5WoORHSsBuDavM4czkSinB7OsaRa1NOAXyzWZrYtjxa5APFnuiu4bWUR1HdlwiKAjU5UxAhcsu_9ExUcjjtly-Y1owE3nEPlWqDjXO91yhs0fEgQPwepCC01QuvJEg7hg_KnokmefQkWksVE3vBlJjbGlzXSztH6s1mSsxyungPBNgzVa1cSis5cLfzbnp?width=4032&amp;amp;height=3024&amp;amp;cropmode=none&quot; alt=&quot;기존 써멀 구리스 제거&quot; /&gt;&lt;/p&gt;

&lt;p&gt;물티슈를 이용하여 열심히 닦아준다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://dsm01pap005files.storage.live.com/y4mgKGHmBAKht25lu4S7S8lrNllw14z71vdYnCCAZU41sJNTNEdg-CbSlJhWGeBAAf1ufuzKnpOWCf0mAUWJLFvF2Mi__-DPfYITMRY7CYi2W_mSzpc1VcLKWonoglFKw7kt99DhcspDF5WlXHXMPbpkvVXuZkY7VkjxpaXKACNcKjp1OJ1KRxMRdAw93N-Gf76?width=4032&amp;amp;height=3024&amp;amp;cropmode=none&quot; alt=&quot;XTC-4 20g&quot; /&gt;&lt;/p&gt;

&lt;p&gt;써멀구리스는 집에 있는 XTC-4를 사용하였다. MX-4의 경우 최근에 가품 논란이 있기도 했고, 사실 써멀 구리스는 너무 싸구려만 사지 않으면 괜찮다는 주의여서 가성비로 사용하고 있고, 데스크탑이나 스위치 등에도 사용했지만 큰 문제 없이 잘 사용하고, 최소한한 번들로 오는 구리스들 보다는 나은 성능을 보여준다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://dsm01pap005files.storage.live.com/y4mOOGvtaqWuqfdpy_RaMSTQ-E5YHIFtkgkOIcavn5Kc3jybXpstsA9uCHz_QWqjlf2By503AWHQ6exBVrxN2hZS7Vs7Ng6ogMf5lQOoxlrcIJLXWz1sSzrrpO7qOzQqDN1rn-8K5J7xhU75yFJpegahj_6b3vGMnWSgAmdNlvMmAtR6i404H8Pgzy45yIQlN89?width=4032&amp;amp;height=3024&amp;amp;cropmode=none&quot; alt=&quot;작동확인&quot; /&gt;&lt;/p&gt;

&lt;p&gt;모든 부품을 다시 연결하고 살짝 열어서 정상 작동이 되는지 확인한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://dsm01pap005files.storage.live.com/y4mDVmpX2NvWq0e18XKpHu8A7KFg2llf9YxNpA-BKdM0Kp-931S_qYavXsILvzRHPIii_OvhTeDEBvVCF6h4TYEyjy_I1YqhFh2-2BaIAZWxPdp6L9jj72eFlNmfEmMHH3u_t9YoxukyYLzuslKBahZw_LD_1GdhyulwewFmuXGO59MGOn_U6ZUWjivsm5G-JGY?width=4032&amp;amp;height=3024&amp;amp;cropmode=none&quot; alt=&quot;써멀패드 1.5T 부착&quot; /&gt;&lt;/p&gt;

&lt;p&gt;배기구쪽 히트파이프와 프로세서 바로 위 히트파이프 부분에 써멀패드를 부착하여 줬다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://dsm01pap005files.storage.live.com/y4mzw_CP9c4nsa0lCIVEU4UwXcEaA5lyG2-vx9hrjUiS-D8VdT051_BKESKvrZXuFYvsZLEGR54H78RjMJz2Ml1avmkE3gzc2AsB36RxzWSnv5WBrf9zHLETD3tl-NJHu76pi2zhoJJKmDOhp2xl9K86J4RFh36JQDAtzwqGGdG6-gHLN8Sn1QcIKFjrdNE9Nwh?width=4032&amp;amp;height=3024&amp;amp;cropmode=none&quot; alt=&quot;써멀패드로 인한 유격&quot; /&gt;&lt;/p&gt;

&lt;p&gt;하지만, 유격이 없이 딱 맞게 설계된 노트북이라 그런지 1.5t 써멀패드가 붙은 것 만으로도 하판이 다 닫히지가 않는다 ㅠㅠㅠ&lt;/p&gt;

&lt;h2 id=&quot;후기&quot;&gt;후기&lt;/h2&gt;
&lt;p&gt;사실 XPS 13과 같은 소형 노트북들은 책상 위에 올려두는 것 말고도 랩탑이라는 이름에 걸맞게 대중교통 안에서 무릎위에 올려두고 사용할 경우도 있는데, 알루미늄 하판에 열을 배출시키면 사실 사용성 관점에서는 온도로 인해서 불편할 수 있고, 그렇게 큰 성능차이가 나지 않을 수 있기에 하판 써멀패드 작업을 하시려는 분들은 노트북을 어떻게 사용할 지에 대한 고민이 한 번 필요하다. 또 사진은 따로 찍지는 않았는데 히트파이프가 닫는 부분이 알루미늄이 아니라 단열재가 추가로 덮혀 있는 구조였는데, 깔끔하게 때지지 않은 것 역시 포기한 이유이다.&lt;/p&gt;

&lt;p&gt;온도는 구입 당시 아이들 기준으로 55도 정도를 유지했는데, 작업 후에는 48-50 정도 사이를 유지하는 모습을 보여준다. 이 모델은 i7-8550U 프로세서를 탑재했는데, 지금도 문서작성 및 웹서핑으로는 충분한 성능을 보여주는 CPU이지만, 발열로 악명이 높은 8세대 프로세서인 만큼 추가적으로 XTU를 이용해서 언더볼팅 작업이 필요할 듯 하다.&lt;/p&gt;</content><author><name>ksyu0508</name></author><category term="etc" /><category term="xps 9370" /><category term="노트북" /><summary type="html">서론</summary></entry></feed>